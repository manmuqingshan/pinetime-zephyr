/*
 * Copyright (c) 2017, NXP
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#include <drivers/sensor.h>
#include <drivers/i2c.h>
#include <drivers/gpio.h>

#define HRS3300_REG_INT_STS1		0x00
#define HRS3300_REG_INT_STS2		0x01
#define HRS3300_REG_INT_EN1		0x02
#define HRS3300_REG_INT_EN2		0x03
#define HRS3300_REG_FIFO_WR		0x04
#define HRS3300_REG_FIFO_OVF		0x05
#define HRS3300_REG_FIFO_RD		0x06
#define HRS3300_REG_FIFO_DATA		0x07
#define HRS3300_REG_FIFO_CFG		0x08
#define HRS3300_REG_MODE_CFG		0x09
#define HRS3300_REG_SPO2_CFG		0x0a
#define HRS3300_REG_LED1_PA		0x0c
#define HRS3300_REG_LED2_PA		0x0d
#define HRS3300_REG_LED3_PA		0x0e
#define HRS3300_REG_PILOT_PA		0x10
#define HRS3300_REG_MULTI_LED		0x11
#define HRS3300_REG_TINT		0x1f
#define HRS3300_REG_TFRAC		0x20
#define HRS3300_REG_TEMP_CFG		0x21
#define HRS3300_REG_PROX_INT		0x30
#define HRS3300_REG_REV_ID		0xfe
#define HRS3300_REG_PART_ID		0xff

#define HRS3300_INT_PPG_MASK		(1 << 6)

#define HRS3300_FIFO_CFG_SMP_AVE_SHIFT		5
#define HRS3300_FIFO_CFG_FIFO_FULL_SHIFT	0
#define HRS3300_FIFO_CFG_ROLLOVER_EN_MASK	(1 << 4)

#define HRS3300_MODE_CFG_SHDN_MASK	(1 << 7)
#define HRS3300_MODE_CFG_RESET_MASK	(1 << 6)

#define HRS3300_SPO2_ADC_RGE_SHIFT	5
#define HRS3300_SPO2_SR_SHIFT		2
#define HRS3300_SPO2_PW_SHIFT		0

//#define HRS3300_PART_ID		0x15
#define HRS3300_PART_ID		0xa3

#define HRS3300_BYTES_PER_CHANNEL	3
#define HRS3300_MAX_NUM_CHANNELS	3
//#define HRS3300_MAX_BYTES_PER_SAMPLE	(HRS3300_MAX_NUM_CHANNELS * HRS3300_BYTES_PER_CHANNEL)
#define HRS3300_MAX_BYTES_PER_SAMPLE 0x08	
					 

#define HRS3300_SLOT_LED_MASK		0x03

#define HRS3300_FIFO_DATA_BITS		18
#define HRS3300_FIFO_DATA_MASK		((1 << HRS3300_FIFO_DATA_BITS) - 1)

enum hrs3300_mode {
	HRS3300_MODE_HEART_RATE	= 2,
	HRS3300_MODE_SPO2		= 3,
	HRS3300_MODE_MULTI_LED		= 7,
};

enum hrs3300_slot {
	HRS3300_SLOT_DISABLED		= 0,
	HRS3300_SLOT_RED_LED1_PA,
	HRS3300_SLOT_IR_LED2_PA,
	HRS3300_SLOT_GREEN_LED3_PA,
	HRS3300_SLOT_RED_PILOT_PA,
	HRS3300_SLOT_IR_PILOT_PA,
	HRS3300_SLOT_GREEN_PILOT_PA,
};

enum hrs3300_led_channel {
	HRS3300_LED_CHANNEL_RED	= 0,
	HRS3300_LED_CHANNEL_IR,
	HRS3300_LED_CHANNEL_GREEN,
};

enum hrs3300_pw {
	HRS3300_PW_15BITS		= 0,
	HRS3300_PW_16BITS,
	HRS3300_PW_17BITS,
	HRS3300_PW_18BITS,
};

struct hrs3300_config {
	const char *i2c_label;
	uint16_t i2c_addr;
	uint8_t fifo;
	uint8_t spo2;
	uint8_t led_pa[HRS3300_MAX_NUM_CHANNELS];
	enum hrs3300_mode mode;
	enum hrs3300_slot slot[4];
};

struct hrs3300_data {
	const struct device *i2c;
	uint32_t raw[HRS3300_MAX_NUM_CHANNELS];
	uint8_t map[HRS3300_MAX_NUM_CHANNELS];
	uint8_t num_channels;
};
