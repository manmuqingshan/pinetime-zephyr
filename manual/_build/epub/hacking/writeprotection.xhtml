<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>howto flash your zephyr image</title>
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="howto-flash-your-zephyr-image">
<span id="flashing"></span><h1>howto flash your zephyr image</h1>
<p>Once you completed your <code class="docutils literal notranslate"><span class="pre">west</span> <span class="pre">build</span></code> , your image is located under the build directory</p>
<div class="highlight-console notranslate"><div class="highlight"><pre><span></span><span class="gp">   $</span> <span class="nb">cd</span> ~/work/pinetime/zephyr/build/zephyr
<span class="go">   here you can find zephyr.bin which you can flash</span>




<span class="go">I use Openocd to flash.</span>
<span class="go">Just connect : telnet 127.0.0.1 4444</span>

<span class="go">.. code-block:: console</span>

<span class="go">    program zephyr.bin</span>
</pre></div>
</div>
</div>
<div class="section" id="howto-remove-the-write-protection">
<h1>howto remove the write protection</h1>
<dl>
<dt>::</dt><dd><p>the PineTime watch is read/write protected (at least the one I got)
executing the following : nrf52.dap apreg 1 0x0c shows 0x0</p>
<p>Mind you, st-link does not allow you to execute that command, for this you will need a J-link.</p>
<p>There is a workaround using the GPIO of a raspberry pi or an Orangepi. (in this case you won’t need an external programmer at all)
(You can find an example for the orange pi in my repo :<a class="reference external" href="https://github.com/najnesnaj/openocd">https://github.com/najnesnaj/openocd</a>.)
You have to reconfigure Openocd with the –enable-cmsis-dap option.</p>
<p>Unlock the chip by executing the command:
&gt; nrf52.dap apreg 1 0x04 0x01</p>
</dd>
</dl>
</div>


            <div class="clearer"></div>
          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>